// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TeploBalanceKotelCore.Data;

#nullable disable

namespace TeploBalanceKotelCore.Migrations
{
    [DbContext(typeof(DataContext_TverdToplivo))]
    [Migration("20241123112909_MigrationInitTverdToplivoTables")]
    partial class MigrationInitTverdToplivoTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("TeploBalanceKotelCore.Data.DataInputVariant_TverdToplivo", b =>
                {
                    b.Property<int>("ID_DataInputVariant_TverdToplivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("Alpha")
                        .HasColumnType("REAL");

                    b.Property<int>("ID_Variant_TverdToplivo")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OwnerID_User")
                        .HasColumnType("INTEGER");

                    b.Property<double>("ParVyh")
                        .HasColumnType("REAL");

                    b.Property<double>("Pressure")
                        .HasColumnType("REAL");

                    b.Property<double>("QChem")
                        .HasColumnType("REAL");

                    b.Property<double>("QCold")
                        .HasColumnType("REAL");

                    b.Property<double>("QMech")
                        .HasColumnType("REAL");

                    b.Property<double>("QWarm")
                        .HasColumnType("REAL");

                    b.Property<double>("RashWat")
                        .HasColumnType("REAL");

                    b.Property<double>("SodC")
                        .HasColumnType("REAL");

                    b.Property<double>("SodH")
                        .HasColumnType("REAL");

                    b.Property<double>("SodO")
                        .HasColumnType("REAL");

                    b.Property<double>("SodS")
                        .HasColumnType("REAL");

                    b.Property<double>("SodWP")
                        .HasColumnType("REAL");

                    b.Property<double>("TempHeatWat")
                        .HasColumnType("REAL");

                    b.Property<double>("TempOut")
                        .HasColumnType("REAL");

                    b.Property<double>("TempPitWat")
                        .HasColumnType("REAL");

                    b.Property<double>("TempRabT")
                        .HasColumnType("REAL");

                    b.Property<double>("TempVozd")
                        .HasColumnType("REAL");

                    b.Property<string>("Variant_TverdToplivoId_Variant")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("VariantsTverdToplivoVarTverd_Toplivo_ID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID_DataInputVariant_TverdToplivo");

                    b.HasIndex("OwnerID_User");

                    b.HasIndex("VariantsTverdToplivoVarTverd_Toplivo_ID");

                    b.ToTable("DataInputVariants_TverdToplivo");
                });

            modelBuilder.Entity("TeploBalanceKotelCore.Data.User", b =>
                {
                    b.Property<int>("ID_User")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<int>("Role")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID_User");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TeploBalanceKotelCore.Data.VarTverdToplivo", b =>
                {
                    b.Property<int>("VarTverd_Toplivo_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateVariant")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("NameVariant_TverdToplivo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("OwnerID_User")
                        .HasColumnType("INTEGER");

                    b.HasKey("VarTverd_Toplivo_ID");

                    b.HasIndex("OwnerID_User");

                    b.ToTable("VarTverdToplivos");
                });

            modelBuilder.Entity("TeploBalanceKotelCore.Data.DataInputVariant_TverdToplivo", b =>
                {
                    b.HasOne("TeploBalanceKotelCore.Data.User", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerID_User")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TeploBalanceKotelCore.Data.VarTverdToplivo", "VariantsTverdToplivo")
                        .WithMany()
                        .HasForeignKey("VariantsTverdToplivoVarTverd_Toplivo_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");

                    b.Navigation("VariantsTverdToplivo");
                });

            modelBuilder.Entity("TeploBalanceKotelCore.Data.VarTverdToplivo", b =>
                {
                    b.HasOne("TeploBalanceKotelCore.Data.User", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerID_User")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });
#pragma warning restore 612, 618
        }
    }
}
